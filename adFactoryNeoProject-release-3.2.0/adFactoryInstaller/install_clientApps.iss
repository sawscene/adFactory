; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "adFactory"
#define MyAppPublisher "ADTEK FUJI Co., Ltd."
#define MyAppURL "http://www.adtek-fuji.co.jp/"
#define MyAppContact "0564-31-4690"
#define MyAppVersion ReadIni(SourcePath+"version.ini", "Version", "Ver", "unknown")

#define JavaInstaller "jre-8u321-windows-i586.exe"
#define JavaInstaller64 "jre-8u321-windows-x64.exe"
#define jdkPath "Java\jdk1.8.0_321"
#define jrePath "Java\jre1.8.0_321"
#define javaPath "Java"

#define OpenJDKZip "amazon-corretto-21.0.4.7.1-windows-x64-jdk.zip"
#define OpenJDKPath "jdk21.0.4_7"
#define dotNetFx40 "dotNetFx40_Full_x86_x64.exe"

#define ApacheFtpName "ApacheFtpServer"

#define TomeeName "TomEE_10" 
#define ApacheName "Apache24"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{690DA003-0A50-4D81-B4D5-427F2BCE7A8C}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppContact={#MyAppContact}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=c:\{#MyAppName}
DefaultGroupName={#MyAppName}
AppCopyright={#MyAppPublisher}
AllowNoIcons=yes
AllowUNCPath=no
OutputBaseFilename=adFactoryClientAppsSetup_v{#MyAppVersion}
Compression=lzma
SolidCompression=yes
PrivilegesRequired=admin
ChangesEnvironment=yes

[Languages]
Name: "en"; MessagesFile: "compiler:Default.isl"; LicenseFile :License_en.txt
Name: "jp"; MessagesFile: "compiler:Languages\Japanese.isl"; LicenseFile :License_jp.txt

[CustomMessages]
en.fullInstall=Default Install
en.managementInstall=adFactory Management Tools Install
en.clientInstall=adFactory Client Tools Install
en.customInstall=Custom Install
en.managementTools=adFactory Management Tools
en.adManagerTool=adManager Application
en.clientTools=Client Tools
en.adAndonTool=adMonitor Application
en.adSetupTool=adSetupTool
en.adInterfaceService=adInterface Service
en.warehouseTool=adFactory Warehouse
en.adManagerTool_del=adManager application
en.notExistFile= does not exist. Please check.
jp.fullInstall=デフォルトインストール
jp.managementInstall=adFactory管理ツールのインストール
jp.clientInstall=adFactoryクライアントツールのインストール
jp.customInstall=カスタムインストール
jp.managementTools=adFactory 管理ツール
jp.adManagerTool=adManager アプリケーション
jp.clientTools=adFactory クライアントツール
jp.adAndonTool=adMonitor アプリケーション
jp.adSetupTool=adSetupTool
jp.adInterfaceService=adInterface 管理サービス
jp.warehouseTool=adFactory 倉庫案内
jp.adManagerTool_del=adManager 生産管理アプリケーション
jp.notExistFile= が存在しません。ご確認ください。



[Types]
Name: "full"; Description: {cm:fullInstall}
Name: "management"; Description: {cm:managementInstall}
Name: "client"; Description: {cm:clientInstall}
;Name: "warehouse"; Description: {cm:warehouseInstall};
Name: "custom"; Description: {cm:customInstall}; Flags: iscustom

[Components]
Name: "management"; Description: {cm:managementTools}; Types: "full management custom"
Name: "management\adManager"; Description: {cm:adManagerTool}; Types: "full management custom"
Name: "management\warehouse"; Description: {cm:warehouseTool};
Name: "client"; Description: {cm:clientTools}; Types: "full client custom"
Name: "client\adAndon"; Description: {cm:adAndonTool}; Types: "full client custom"

[Registry]
Root: HKLM; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; ValueType: expandsz; ValueName: "ADFACTORY_HOME"; ValueData: "{app}";
Root: HKLM64; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; ValueType: expandsz; ValueName: "JAVA_HOME"; ValueData: "{app}\3rd\{#OpenJDKPath}";

[Dirs]
Name: {app}\3rd; Check:isDbDirExist('{app}\3rd'); Permissions: authusers-modify
Name: {app}\bin; Check:isDbDirExist('{app}\bin'); Permissions: authusers-modify
Name: {app}\conf; Check:isDbDirExist('{app}\conf'); Permissions: users-modify
Name: {app}\licenses; Check:isDbDirExist('{app}\licenses'); Permissions: authusers-modify
Name: {app}\logs; Check:isDbDirExist('{app}\logs'); Permissions: users-modify
Name: {app}\plugin; Check:isDbDirExist('{app}\plugin'); Permissions: authusers-modify
Name: {app}\template; Check:isDbDirExist('{app}\template'); Permissions: authusers-modify
Name: {app}\temp; Check:isDbDirExist('{app}\temp'); Permissions: users-modify
Name: C:\adFactory_IN; Check:isDbDirExist('C:\adFactory_IN'); Permissions: users-modify; Components: management\warehouse;

[Files]
Source: "version.ini"; DestDir: "{app}\"; Flags: ignoreversion
Source: "unzipper.dll"; Flags: dontcopy
Source: "{src}\3rd\{#OpenJDKZip}"; DestDir: "{tmp}"; Flags: external skipifsourcedoesntexist; ExternalSize: 201696048; Check: isDbDirExist('{app}\3rd\{#OpenJDKPath}'); AfterInstall: installJava()
Source: "{src}\3rd\{#dotNetFx40}"; DestDir: "{tmp}"; Flags: external skipifsourcedoesntexist; ExternalSize: 50449456; Check: not IsDotNet4Installed; AfterInstall: installDotNetFx40()

Source: "licenses\*"; DestDir: "{app}\licenses"; Flags: ignoreversion
Source: "bin\locale.properties"; DestDir: "{app}\bin\locale"; Flags: ignoreversion
Source: "bin\7za.exe"; DestDir: "{app}\bin"; Flags: onlyifdoesntexist
Source: "bin\adFactorySettingTool.exe"; DestDir: "{app}\bin"; Flags: ignoreversion

Source: "bin\adMonitor アプリケーション.lnk"; DestDir: "{commondesktop}"; Flags: ignoreversion; Components: client\adAndon
Source: "bin\adMonitor アプリケーション.lnk"; DestDir: "{group}"; Flags: ignoreversion; Components: client\adAndon
Source: "bin\adAndonApp.bat"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: client\adAndon
Source: "bin\adAndonApp.exe"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: client\adAndon

Source: "bin\DashboardCustomizeTool.exe"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\adManager or client\adAndon
Source: "bin\Dockingcontrollayout.dll"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\adManager or client\adAndon
Source: "bin\Infragistics4.Shared.v15.1.dll"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\adManager or client\adAndon
Source: "bin\Infragistics4.Win.Misc.v15.1.dll"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\adManager or client\adAndon
Source: "bin\Infragistics4.Win.UltraWinDock.v15.1.dll"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\adManager or client\adAndon
Source: "bin\Infragistics4.Win.v15.1.dll"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\adManager or client\adAndon
Source: "bin\Ionic.Zip.dll"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\adManager or client\adAndon
Source: "bin\log4net.dll"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\adManager or client\adAndon

Source: "bin\adManager アプリケーション.lnk"; DestDir: "{commondesktop}"; Flags: ignoreversion; Components: management\adManager
Source: "bin\adManager アプリケーション.lnk"; DestDir: "{group}"; Flags: ignoreversion; Components: management\adManager
Source: "bin\adManagerApp.bat"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\adManager
Source: "bin\adManagerApp.exe"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\adManager or management\warehouse

Source: "CmdSatellite\*"; DestDir: "{app}\CmdSatellite"; Flags: ignoreversion; Components: client\adAndon
Source: "bin\print_excel.vbs"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\adManager
Source: "bin\adSetupTool.exe"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\adManager or client\adAndon or management\warehouse;
Source: "bin\adFloorLayoutEditor.exe"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: client\adAndon
Source: "bin\replace_shortcut.vbs"; DestDir: "{app}\bin"; Flags: ignoreversion

Source: "bin\adInterfaceService.exe"; DestDir: "{app}\bin"; Flags: ignoreversion; Components: management\warehouse; BeforeInstall: stopWindowsService('adInterfaceService')

; excel -> pdf変換
Source: "bin\xlsx2pdf.ps1"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: "bin\xlsx2pdf.bat"; DestDir: "{app}\bin"; Flags: ignoreversion

; 64bit nssm
Source: "bin\nssm.exe"; DestDir: "{app}\bin"; Check: IsWin64; Flags: ignoreversion
; 32bit nssm
Source: "bin\win32\nssm.exe"; DestDir: "{app}\bin"; Check: not IsWin64; Flags: ignoreversion

Source: "plugin\WarehouseServicePlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\warehouse; AfterInstall: setupWindowsService('adInterfaceService', '{cm:adInterfaceService}', '{app}\bin\adInterfaceService.exe')

Source: "conf\adAndonCustomizeTool.xml"; DestDir: "{app}\conf"; Flags: onlyifdoesntexist; Components: management\adManager or client\adAndon
Source: "conf\adAndonCustomizeToolItemList.ini"; DestDir: "{app}\conf"; Flags: ignoreversion; Components: management\adManager or client\adAndon
Source: "conf\adAndonCustomizeToolLayoutInfo.cfg"; DestDir: "{app}\conf"; Flags: onlyifdoesntexist; Components: management\adManager or client\adAndon
Source: "conf\adAndonCustomizeToolLayoutInfo.xml"; DestDir: "{app}\conf"; Flags: onlyifdoesntexist; Components: management\adManager or client\adAndon
Source: "conf\Dashboard.ini"; DestDir: "{app}\conf"; Flags: onlyifdoesntexist; Components: management\adManager or client\adAndon
Source: "conf\DashboardBackup.ini"; DestDir: "{app}\conf"; Flags: onlyifdoesntexist; Components: management\adManager or client\adAndon
Source: "conf\InitialLayoutInfo"; DestDir: "{app}\conf"; Flags: onlyifdoesntexist; Components: management\adManager or client\adAndon
Source: "conf\adAccessoryPlugins.xml"; DestDir: "{app}\conf"; Flags: ignoreversion; Components: management\adManager
Source: "conf\adAndonApp.properties"; DestDir: "{app}\conf"; Flags: onlyifdoesntexist; Components: client\adAndon
Source: "conf\adManeApp.properties"; DestDir: "{app}\conf"; Flags: onlyifdoesntexist; Components: management\adManager or management\warehouse
Source: "conf\adFactoryProductionNavi.properties"; DestDir: "{app}\conf"; Flags: onlyifdoesntexist; Components: management\adManager
Source: "conf\pickinglist_setting.xml"; DestDir: "{app}\conf"; Flags: ignoreversion; Components: management\warehouse

; Source: "plugin\StandardLocalePlugin.jar"; DestDir: "{app}\plugin"; DestName: "StandardLocalePlugin.jar"; Flags: ignoreversion sharedfile; Components: management or client or management\warehouse; BeforeInstall: stopService()
Source: "plugin\adManagerAndonSettingPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager
Source: "plugin\adManagerEquipmentEditPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager
Source: "plugin\adManagerKanbanEditPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager
Source: "plugin\adManagerLineTimerPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager
Source: "plugin\adManagerOrganizationEditPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager or management\warehouse
Source: "plugin\adManagerReportOutPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager
Source: "plugin\adManagerSystemSettingPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager or management\warehouse
Source: "plugin\adManagerWorkflowEditPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager
Source: "plugin\adManagerWarehousePlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\warehouse
Source: "plugin\adManagerChartPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager
Source: "plugin\adManaProductionNaviPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager 
Source: "plugin\adManagerWorkReportPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager
Source: "plugin\adManagerSummaryReportPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager
Source: "plugin\adManagerLedgerManagerPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager

;Source: "plugin\adManagerDsItemEditPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: management\adManager

Source: "plugin\adAndonClockPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adAndonDailyDelayNumPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adAndonDailyInterruptNumPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adAndonDailyPlanDeviatedNumPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adAndonDailyPlanDeviatedTimePlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adAndonDailyPlanNumPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adAndonLineCountDownPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adAndonLineTaktTimePlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adAndonMonthlyPlanDeviatedNumPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adAndonMonthlyPlanNumPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adAndonTitlePlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adAndonDailyWorkPlanNumPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adMonitorEquipmentPlanNumPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adMonitorEquipmentStatusPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adMonitorLineStatusPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adMonitorBlankSpacePlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adAndonWorkPlanNumPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon
Source: "plugin\adMonitorFloorPlugin.jar"; DestDir: "{app}\plugin"; Flags: ignoreversion; Components: client\adAndon

;Source: "template\arrived_kanban.xlsx"; DestDir: "{app}\template"; Flags: onlyifdoesntexist; Components: management\adManager
Source: "template\accept_label.xlsm"; DestDir: "{app}\template"; Flags: ignoreversion; Components: management\warehouse
Source: "template\delivery_list.xlsx"; DestDir: "{app}\template"; Flags: ignoreversion; Components: management\warehouse
Source: "template\delivery_form.xlsx"; DestDir: "{app}\template"; Flags: ignoreversion; Components: management\warehouse

Source: "ext\KanbanCSV.xlsm"; DestDir: "{app}\ext"; Flags: ignoreversion; Components: management\adManager

Source: "adFactory_IN\instock_setting.xml"; DestDir: "C:\adFactory_IN"; Flags: onlyifdoesntexist; Components: management\warehouse
Source: "adFactory_IN\mst_bom_setting.xml"; DestDir: "C:\adFactory_IN"; Flags: onlyifdoesntexist; Components: management\warehouse
Source: "adFactory_IN\mst_location_setting.xml"; DestDir: "C:\adFactory_IN"; Flags: onlyifdoesntexist; Components: management\warehouse
Source: "adFactory_IN\mst_parts_setting.xml"; DestDir: "C:\adFactory_IN"; Flags: onlyifdoesntexist; Components: management\warehouse
Source: "adFactory_IN\mst_stock_setting.xml"; DestDir: "C:\adFactory_IN"; Flags: onlyifdoesntexist; Components: management\warehouse
Source: "adFactory_IN\storein_setting.xml"; DestDir: "C:\adFactory_IN"; Flags: onlyifdoesntexist; Components: management\warehouse
Source: "adFactory_IN\withdraw_setting.xml"; DestDir: "C:\adFactory_IN"; Flags: onlyifdoesntexist; Components: management\warehouse

[Icons]
;Name: "{group}\{cm:adManagerTool}"; Filename: "{app}\bin\adManagerApp.exe"; Flags: createonlyiffileexists
;Name: "{group}\{cm:adAndonTool}"; Filename: "{app}\bin\adAndonApp.exe"; Flags: createonlyiffileexists
;Name: "{userdesktop}\{cm:adManagerTool}"; Filename: "{app}\bin\adManagerApp.exe"; Flags: createonlyiffileexists
;Name: "{userdesktop}\{cm:adAndonTool}"; Filename: "{app}\bin\adAndonApp.exe"; Flags: createonlyiffileexists
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{group}\{cm:adSetupTool}"; Filename: "{app}\bin\adSetupTool.exe"; Flags: createonlyiffileexists

[Run]
Filename: "net"; Parameters: start {#TomeeName}; Check: IsWin64; Flags: runhidden runascurrentuser
Filename: "net"; Parameters: start {#ApacheName}; Check: IsWin64; Flags: runhidden runascurrentuser
Filename: "{app}\bin\nssm.exe"; Parameters: start adInterfaceService; Flags: runhidden runascurrentuser
; ショートカットのリンク先を変更する
Filename: "{sys}\wscript.exe"; Parameters: "{app}\bin\replace_shortcut.vbs"; Check: IsWin64; Flags: runhidden runascurrentuser

[InstallDelete]
Type: files; Name: "{app}\plugin\adAndonEquipmentPlanNumPlugin.jar"
Type: files; Name: "{app}\plugin\adAndonEquipmentStatusPlugin.jar"
Type: files; Name: "{app}\plugin\adAndonLineStatusPlugin.jar"
Type: files; Name: "{app}\plugin\WarehouseServicePlugin.jar"
Type: files; Name: "{group}\{cm:adManagerTool_del}.lnk"
Type: files; Name: "{app}\plugin\adManagerWarehousePlugin.jar"
Type: files; Name: "{app}\plugin\adManagerLedgerManagerPlugin.jar"
; ユーザーのデスクトップからショートカットを削除
Type: files; Name: "{userdesktop}\{cm:adManagerTool_del}.lnk"
Type: files; Name: "{userdesktop}\{cm:adAndonTool}.lnk"
Type: files; Name: "{userdesktop}\{cm:adManagerTool}.lnk"

[UninstallDelete]
Type: filesandordirs; Name: "{app}\bin"
Type: filesandordirs; Name: "{app}\conf"
Type: filesandordirs; Name: "{app}\licenses"
Type: filesandordirs; Name: "{app}\logs"
Type: filesandordirs; Name: "{app}\plugin"
Type: filesandordirs; Name: "{app}\template"
Type: filesandordirs; Name: "{app}\client"
Type: filesandordirs; Name: "{app}\temp"

[UninstallRun]
Filename: "{app}\bin\nssm.exe"; Parameters: stop adInterfaceService; Components: management\warehouse; Flags: runhidden
Filename: "{app}\bin\nssm.exe"; Parameters: remove adInterfaceService confirm; Components: management\warehouse; Flags: runhidden

[Code]
#ifdef UNICODE
  #define AW "W"
#else
  #define AW "A"
#endif

const RegKeyJRE = 'SOFTWARE\JavaSoft\Java Runtime Environment\';

function SetEnvironmentVariable(lpName: string; lpValue: string): BOOL;
  external 'SetEnvironmentVariable{#AW}@kernel32.dll stdcall';

//************************* Global Variables *************************
var IsRestart: Boolean;
var IsUpdate: Boolean;

procedure unzip(src, target: AnsiString);
  external 'unzip@files:unzipper.dll stdcall delayload';

// フォルダがが存在しない場合、Trueを返す
function isDbDirExist(path: string): Boolean;
begin
  Result := True;
  if DirExists(ExpandConstant(path)) then
  begin
    Result := False;
  end;
end;

// JAVA_HOMEを設定する。
procedure SetJdkPath(path: String);
begin
  if not SetEnvironmentVariable('JAVA_HOME', path) then
    MsgBox(SysErrorMessage(DLLGetLastError), mbError, MB_OK);
  Log('[info]JAVA_HOME:' + path)
end;

// OpenJDKのパッケージを解凍する。
procedure unzipOpenJDK();
begin
  Log('[info]unzipOpenJDK')
  unzip(AnsiString(ExpandConstant('{tmp}\{#OpenJDKZip}')), AnsiString(ExpandConstant('{app}\3rd')));
end;

// Javaをインストールする
procedure installJava();
var
  ResultCode: Integer;
begin
  //msgbox('Installation to ' + ExpandConstant('{pf64}\{#JavaPath}'), mbConfirmation, MB_OK);
  Log('[info]installJava')
  // JAVAをインストールする。
  unzipOpenJDK();

  SetJdkPath(ExpandConstant('{app}\3rd\{#OpenJDKPath}'));
end;

// 関連サービスを停止する
procedure stopService();
var
  ResultCode: Integer;
begin
  if IsWin64 then
  begin
    Exec(ExpandConstant('{cmd}'), '/c net stop Apache24', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
    Exec(ExpandConstant('{cmd}'), '/c net stop TomEE_10', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
    Exec(ExpandConstant('{app}\bin\nssm.exe'), 'stop adInterfaceService', ExpandConstant('{app}\bin'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
  end;
end;

// 文字列を展開する
procedure Split(var Dest: TArrayOfString; Text: String; Separator: String);
var
  i, p: Integer;
begin
  i := 0;
  repeat
    SetArrayLength(Dest, i+1);
    p := Pos(Separator,Text);
    if p > 0 then begin
      Dest[i] := Copy(Text, 1, p-1);
      Text := Copy(Text, p + Length(Separator), Length(Text));
      i := i + 1;
    end else begin
      Dest[i] := Text;
      Text := '';
    end;
  until Length(Text)=0;
end;

// 64ビットOSにてJREのフォルダー名を取得する
function GetJava64Path(MinVersion: string): string;
var
  Index: Integer;
  Path: string;
  Versions: TArrayOfString;
  StringArray: TArrayOfString;
begin
  Result := ExpandConstant('{pf64}\{#jrePath}');
  if RegGetSubkeyNames(HKLM64, RegKeyJRE, Versions) then
    for Index := 0 to GetArrayLength(Versions)-1 do
      if (Versions[Index][2] = '.') and (Versions[Index][3] >= MinVersion) and
        RegQueryStringValue(HKLM64, RegKeyJRE + Versions[Index], 'JavaHome', Path) then
      begin
        Split(StringArray, Path,'\');
        Result := StringArray[GetArrayLength(StringArray)-1];
        Exit;
      end;
end;

// 32ビットOSにてJREのフォルダー名を取得する
function GetJava32Path(MinVersion: string): string;
var
  Index: Integer;
  Path: string;
  Versions: TArrayOfString;
  StringArray: TArrayOfString;
begin
  Result := ExpandConstant('{pf32}\{#jrePath}');
  if RegGetSubkeyNames(HKLM32, RegKeyJRE, Versions) then
    for Index := 0 to GetArrayLength(Versions)-1 do
      if (Versions[Index][2] = '.') and (Versions[Index][3] >= MinVersion) and
        RegQueryStringValue(HKLM32, RegKeyJRE + Versions[Index], 'JavaHome', Path) then
      begin
        Split(StringArray, Path,'\');
        Result := StringArray[GetArrayLength(StringArray)-1];
        Exit;
      end;
end;

// .NET Framework 4 以上がインストールされているか (サブ)
function IsDotNetInstalledSub(RegKey: string): Boolean;
var
  RegValue: Cardinal;
begin
  Result := false;
  if RegValueExists(HKEY_LOCAL_MACHINE, RegKey, 'Install') then
  begin
    if RegQueryDWordValue(HKEY_LOCAL_MACHINE, RegKey, 'Install', RegValue) then
    begin
      // 1:インストール, 0:アンインストール
      if RegValue = 1 then
      begin
        Result := true;
      end;
    end;
  end;
end;

// .NET Framework 4 以上がインストールされているか
function IsDotNet4Installed(): Boolean;
var
  DotNetKey: string;
  CheckKey: string;
  RegValue: Cardinal;
begin
  Result := false;
  DotNetKey := 'SOFTWARE\Microsoft\NET Framework Setup\NDP';
  CheckKey := DotNetKey + '\v4\Full';
  if RegKeyExists(HKEY_LOCAL_MACHINE, CheckKey) then
  begin
    Result := IsDotNetInstalledSub(CheckKey);
  end else begin
    CheckKey := DotNetKey + '\v4\Client';
    if RegKeyExists(HKEY_LOCAL_MACHINE, CheckKey) then
    begin
      Result := IsDotNetInstalledSub(CheckKey);
    end;
  end;
end;

// .NET Framework 4 をインストールする
procedure installDotNetFx40();
var
  ResultCode: Integer;
begin
  Exec(ExpandConstant('{tmp}\{#dotNetFx40}'), '/q', ExpandConstant('{tmp}'), SW_SHOWNORMAL, ewWaitUntilTerminated, ResultCode);
end;

// インストーラーを初期化
function InitializeSetup(): Boolean;
begin
  IsRestart := False;

  if not RegValueExists(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment', 'ADFACTORY_HOME')
  then begin
    IsRestart := True;
  end;

  Result := True;
end;

// 各ダイアログで「次へ」ボタンが押された
function NextButtonClick(CurPageID: Integer): Boolean;
begin
  Result := True;
  case CurPageID of
    wpReady:
      begin
        if ((DirExists(ExpandConstant('C:\adFactory\3rd\{#OpenJDKPath}')) = False) and (FileExists(ExpandConstant('{src}\3rd\{#OpenJDKZip}')) = False)) then
        begin
          MsgBox(ExpandConstant('{src}\3rd\{#OpenJDKZip}') + CustomMessage('notExistFile'), mbError, MB_OK);
          Result := False;
        end;
      end;
  end;
end;

// 再起動が必要かどうか
function NeedRestart(): Boolean;
begin
  Result := IsRestart;
end;

// プロパティファイルの値を更新する
//   PropFile: プロパティファイルパス
//   PropKey: プロパティのキー
//   PropValue: プロパティの値
//   IsAddOnly: 追加のみフラグ (True: 追加のみ, False: 追加・更新)
procedure UpdatePropValue(PropFile: String; PropKey: string; PropValue: string; IsAddOnly: Boolean);
var
  FileLines: TStringList;
  Index: Integer;
  StringArray: TArrayOfString;
  IsNotExist: Boolean;
begin
  // ファイルがない場合は何もしない
  if not FileExists(PropFile) then
  begin
    Exit;
  end;

  FileLines := TStringList.Create;
  try
    FileLines.LoadFromFile(PropFile);
    // 該当キーの行を検索して更新する
    IsNotExist := True;
    for Index := 0 to FileLines.Count - 1 do
    begin
      Split(StringArray, FileLines[Index], '=');
      if (StringArray[0] = PropKey) then
      begin
        FileLines[Index] := PropKey + '=' + PropValue;
        IsNotExist := False;
      end;
    end;
    // 該当キーの行が無かった場合は追加する
    if (IsNotExist) then
    begin
      FileLines.Add(PropKey + '=' + PropValue)
    end else begin
      // 新規追加のみ場合は更新しない
      if (IsAddOnly) then
      begin
        Exit;
      end;
    end;
    // ファイルを更新する
    FileLines.SaveToFile(PropFile);
  finally
    FileLines.Free;
  end
end;

// インストール前後タスク
procedure CurStepChanged(CurStep: TSetupStep);
var
  ResultCode: Integer;
begin
  case CurStep of
    ssInstall:// インストール開始前
      begin
        IsUpdate := FileExists(ExpandConstant('{app}\bin\adAndonApp.exe')) and FileExists(ExpandConstant('{app}\bin\adManagerApp.exe'));
      end;
    ssPostInstall:// インストール終了後
      begin
        // 生産管理メニュー「作業計画」無効設定 (設定済の場合は更新しない)
        UpdatePropValue(ExpandConstant('{app}\conf\adFactoryProductionNavi.properties'), 'disable.workplan', 'true', True);
        // 生産管理メニュー「作業者管理」無効設定 (設定済の場合は更新しない)
        UpdatePropValue(ExpandConstant('{app}\conf\adFactoryProductionNavi.properties'), 'disable.worker', 'true', True);
        //UpdatePropValue(ExpandConstant('{app}\conf\adManeApp.properties'), 'autoUpdate', 'true', True);
      end;
    ssDone:// セットアッププログラム終了前
      begin
        // 新規インストールの場合、adSetupToolを起動する
        if not IsUpdate then
        begin
          Exec(ExpandConstant('{app}\bin\adSetupTool.exe'), '', '', SW_SHOW, ewWaitUntilTerminated, ResultCode);
        end; 
      end;
    end;
end;

// サービスを設定する。
procedure setupWindowsService(name, disp, path: String);
var
  ResultCode: Integer;
begin
  //msgbox('setup Windows service at ' + name + ', ' + ExpandConstant(path), mbConfirmation, MB_OK);
  Log('[info]setupWindowsService:' + name + ', ' + disp + ', ' + ExpandConstant(path))
  Exec(ExpandConstant('{app}\bin\nssm.exe'), 'stop ' + name,
    ExpandConstant('{app}\bin'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
  Log('[info]ResultCode:' + IntToStr(ResultCode))
  Log('[info]ResultCode:' + '{app}\bin\nssm.exe' + 'install ' + name + ' ' + ExpandConstant(path))
  Exec(ExpandConstant('{app}\bin\nssm.exe'), 'install ' + name + ' ' + ExpandConstant(path),
    ExpandConstant('{app}\bin'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
  Log('[info]ResultCode:' + IntToStr(ResultCode))
  Exec(ExpandConstant('{app}\bin\nssm.exe'), 'set ' + name + ' DisplayName "' + ExpandConstant(disp) + '"',
    ExpandConstant('{app}\bin'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
  Log('[info]ResultCode:' + IntToStr(ResultCode))
  Exec(ExpandConstant('{app}\bin\nssm.exe'), 'set ' + name + ' Description "' + ExpandConstant(disp) + '"',
    ExpandConstant('{app}\bin'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
  Log('[info]ResultCode:' + IntToStr(ResultCode))
 end;

// サービスを停止する。
procedure stopWindowsService(name: String);
var
  ResultCode: Integer;
begin
  Log('[info]stopWindowsService:' + name)
  Exec(ExpandConstant('{app}\bin\nssm.exe'), 'stop ' + name,
    ExpandConstant('{app}\bin'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
  Log('[info]ResultCode:' + IntToStr(ResultCode))
end;
