; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "adBridgeBI"
#define MyAppVersion ReadIni(SourcePath+"version.ini", "Version", "Ver", "unknown")
#define MyAppPublisher "ADTEK FUJI Co., Ltd."
#define MyAppURL "http://www.adtek-fuji.co.jp/"
#define MyAppContact "0564-31-4690"
#define jrePath "Java\jre1.8.0_151"
#define javaPath "Java"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{1CD7F56B-CDB5-4755-9806-85AE2617D1C0}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppContact={#MyAppContact}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=C:\adFactory\{#MyAppName}
DefaultGroupName={#MyAppName}
AppCopyright={#MyAppPublisher}
OutputBaseFilename=adBridgeBISetup_v{#MyAppVersion}
Compression=lzma
SolidCompression=yes
AllowNoIcons=yes
AllowUNCPath=no
PrivilegesRequired=admin
DisableDirPage=yes

[Languages]
Name: "en"; MessagesFile: "compiler:Default.isl"; LicenseFile :License_en.txt
Name: "jp"; MessagesFile: "compiler:Languages\Japanese.isl"; LicenseFile :License_jp.txt

[CustomMessages]
en.adBridgeBI=adBridgeBI Service
jp.adBridgeBI=adBridgeBI サービス

[Types]
 
[Components]

[Registry]

[Dirs]
Name: {app}\bin; Check:isDbDirExist('{app}\bin'); Permissions: authusers-modify
Name: {app}\conf; Check:isDbDirExist('{app}\conf'); Permissions: users-modify

[Files]
Source: "version.ini"; DestDir: "{app}"; DestName: "version.ini"; Flags: ignoreversion

Source: "bin\nssm.exe"; DestDir: "{app}\bin"; Flags: onlyifdoesntexist;

Source: "bin\adBridgeBI.exe"; DestDir: "{app}\bin"; Flags: ignoreversion; AfterInstall: setupWindowsService('adBridgeBI', '{cm:adBridgeBI}', '{app}\bin\adBridgeBI.exe')

Source: "db\postgres\progressDB\create_bi_user.sql"; DestDir: "{app}\db\postgres\progressDB"; Flags: ignoreversion; 
Source: "db\postgres\progressDB\create_adFactoryProgressDB.sql"; DestDir: "{app}\db\postgres\progressDB"; Flags: ignoreversion; 
Source: "db\postgres\progressDB\create_adFactoryProgressDB_tables.sql"; DestDir: "{app}\db\postgres\progressDB"; Flags: ignoreversion; 
Source: "db\postgres\progressDB\create_adFactoryProgressDB.bat"; DestDir: "{app}\db\postgres\progressDB"; Flags: ignoreversion; 

[Icons]

[Run]
Filename: "{app}\db\postgres\progressDB\create_adFactoryProgressDB.bat"; WorkingDir: "{app}\db\postgres\progressDB"; Flags: runascurrentuser waituntilterminated runhidden; AfterInstall: DeleteFileProcedure('{app}\db\postgres\progressDB\create_adFactoryProgressDB.bat')

Filename: "{app}\bin\nssm.exe"; Parameters: start adBridgeBI; Flags: runhidden runascurrentuser

[UninstallDelete]

[UninstallRun]
Filename: "{app}\bin\nssm.exe"; Parameters: stop adBridgeBI; Flags: runhidden
Filename: "{app}\bin\nssm.exe"; Parameters: remove adBridgeBI confirm; Flags: runhidden

[Code]
const RegKeyJRE = 'SOFTWARE\JavaSoft\Java Runtime Environment\';

// フォルダが存在しない場合、Trueを返す
function isDbDirExist(path: string): Boolean;
begin
  Result := True;
  if DirExists(ExpandConstant(path)) then
  begin
    Result := False;
  end;
end;

// ファイルを削除する
procedure DeleteFileProcedure(FilePath: string);
var
  DelResult: string;
begin
  Log('[info]DeleteFileProcedure' + '(' + FilePath + ')');
  if(DeleteFile(ExpandConstant(FilePath))) then
    DelResult := 'Success'
  else
    DelResult := 'Failure';
  Log('[info]Result:' + DelResult);
end;

// サービスを登録する
procedure setupWindowsService(name, disp, path: String);
var
  ResultCode: Integer;
begin
  //msgbox('setup Windows service at ' + name + ', ' + ExpandConstant(path), mbConfirmation, MB_OK);
  Log('[info]setupWindowsService:' + name + ', ' + disp + ', ' + ExpandConstant(path))
  Exec(ExpandConstant('{app}\bin\nssm.exe'), 'stop ' + name,
    ExpandConstant('{app}\bin'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
  Log('[info]ResultCode:' + IntToStr(ResultCode))
  Log('[info]ResultCode:' + '{app}\bin\nssm.exe' + 'install ' + name + ' ' + ExpandConstant(path))
  Exec(ExpandConstant('{app}\bin\nssm.exe'), 'install ' + name + ' ' + ExpandConstant(path),
    ExpandConstant('{app}\bin'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
  Log('[info]ResultCode:' + IntToStr(ResultCode))
  Exec(ExpandConstant('{app}\bin\nssm.exe'), 'set ' + name + ' DisplayName "' + ExpandConstant(disp) + '"',
    ExpandConstant('{app}\bin'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
  Log('[info]ResultCode:' + IntToStr(ResultCode))
  Exec(ExpandConstant('{app}\bin\nssm.exe'), 'set ' + name + ' Description "' + ExpandConstant(disp) + '"',
    ExpandConstant('{app}\bin'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
  Log('[info]ResultCode:' + IntToStr(ResultCode))
end;

// サービスを停止する
procedure stopWindowsService(name: String);
var
  ResultCode: Integer;
begin
  Log('[info]stopWindowsService:' + name)
  Exec(ExpandConstant('{app}\bin\nssm.exe'), 'stop ' + name,
    ExpandConstant('{app}\bin'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
  Log('[info]ResultCode:' + IntToStr(ResultCode))
end;

// インストール前後タスク
procedure CurStepChanged(CurStep: TSetupStep);
begin
  case CurStep of
    ssInstall:// インストール開始前
      begin
        stopWindowsService('adBridgeBI');
      end;
    ssPostInstall:// インストール終了後
      begin
      end;
    ssDone:// セットアッププログラム終了前
      begin
      end;
  end;
end;
