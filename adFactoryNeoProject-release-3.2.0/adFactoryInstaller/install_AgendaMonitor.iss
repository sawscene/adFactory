; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyName "adFactory adAgendaMonitor"
#define MyAppName "adFactory"
#define MyAppPublisher "ADTEK FUJI Co., Ltd."
#define MyAppURL "http://www.adtek-fuji.co.jp/"
#define MyAppContact "0564-31-4690"
#define MyAppVersion ReadIni(SourcePath+"version.ini", "Version", "Ver", "unknown")

#define OpenJDKZip "amazon-corretto-21.0.4.7.1-windows-x64-jdk.zip"
#define OpenJDKPath "jdk21.0.4_7"
#define dotNetFx40 "dotNetFx40_Full_x86_x64.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{496F1F0B-AEAD-4C32-90EF-4FC4C3E8F5C8}
AppName={#MyName}
AppVersion={#MyAppVersion}
AppVerName={#MyName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppContact={#MyAppContact}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={%ADFACTORY_HOME|c:\{#MyAppName}}
DefaultGroupName={#MyAppName}
AppCopyright={#MyAppPublisher}
AllowNoIcons=yes
AllowUNCPath=no
OutputBaseFilename=adFactoryAgendaMonitorSetup_v{#MyAppVersion}
Compression=lzma
SolidCompression=yes
PrivilegesRequired=admin
;CreateUninstallRegKey=no
;DisableDirPage=yes
;Uninstallable=no
;AlwaysRestart=no
ChangesEnvironment=yes

[Languages]
Name: "en"; MessagesFile: "compiler:Default.isl"; LicenseFile :License_en.txt
Name: "jp"; MessagesFile: "compiler:Languages\Japanese.isl"; LicenseFile :License_jp.txt

[CustomMessages]
en.adAgendaMonitor=adAgendaMonitor application
en.adSetupTool=adSetupTool
en.notExistFile= does not exist. Please check.
jp.adAgendaMonitor=adAgendaMonitor アプリケーション
jp.adSetupTool=adSetupTool
jp.notExistFile= が存在しません。ご確認ください

[Types]
 
[Components]

[Registry]
Root: HKLM; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; ValueType: expandsz; ValueName: "ADFACTORY_HOME"; ValueData: "{app}";
Root: HKLM64; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; ValueType: expandsz; ValueName: "JAVA_HOME"; ValueData: "{app}\3rd\{#OpenJDKPath}";

[Dirs]
Name: {app}\3rd; Check:isDbDirExist('{app}\3rd'); Permissions: authusers-modify
Name: {app}\bin; Check:isDbDirExist('{app}\bin'); Permissions: authusers-modify
Name: {app}\conf; Check:isDbDirExist('{app}\conf'); Permissions: users-modify

[Files]
Source: "version.ini"; DestDir: "{app}"; DestName: "version_agenda.ini"; Flags: ignoreversion
Source: "unzipper.dll"; Flags: dontcopy
Source: "{src}\3rd\{#OpenJDKZip}"; DestDir: "{tmp}"; Flags: external skipifsourcedoesntexist; ExternalSize: 201696048; Check: isDbDirExist('{app}\3rd\{#OpenJDKPath}'); AfterInstall: installJava()
; Source: "{src}\3rd\{#JavaInstaller}"; DestDir: "{tmp}"; Flags: external skipifsourcedoesntexist; ExternalSize: 778596352; Check: not IsWin64; AfterInstall: installJava()
; Source: "{src}\3rd\{#JavaInstaller64}"; DestDir: "{tmp}"; Flags: external skipifsourcedoesntexist; ExternalSize: 778596352; Check: IsWin64; AfterInstall: installJava()

Source: "bin\locale.properties"; DestDir: "{app}\bin\locale"; Flags: ignoreversion
Source: "bin\adAgendaMonitor アプリケーション.lnk"; DestDir: "{commondesktop}"; Flags: ignoreversion;
Source: "bin\adAgendaMonitor アプリケーション.lnk"; DestDir: "{group}"; Flags: ignoreversion;
Source: "bin\adAgendaMonitor.bat"; DestDir: "{app}\bin"; Flags: ignoreversion;
Source: "bin\adAgendaMonitor.bat"; DestDir: "{app}\bin"; Flags: ignoreversion;
Source: "bin\adAgendaMonitor.exe"; DestDir: "{app}\bin"; Flags: ignoreversion;
Source: "bin\adSetupTool.exe"; DestDir: "{app}\bin"; Flags: ignoreversion;
Source: "bin\nssm.exe"; DestDir: "{app}\bin"; Flags: onlyifdoesntexist
Source: "bin\replace_shortcut.vbs"; DestDir: "{app}\bin"; Flags: ignoreversion

; Source: "plugin\StandardLocalePlugin.jar"; DestDir: "{app}\plugin"; DestName: "StandardLocalePlugin.jar"; Flags: ignoreversion sharedfile; BeforeInstall: stopService()

Source: "conf\agendaAndonPlugin.ini"; DestDir: "{app}\conf"; Flags: onlyifdoesntexist;
Source: "conf\adAndonApp.properties"; DestDir: "{app}\conf"; Flags: onlyifdoesntexist;

[Icons]
Name: "{group}\{cm:adSetupTool}"; Filename: "{app}\bin\adSetupTool.exe"; Flags: createonlyiffileexists

[Run]
Filename: "net"; Parameters: start TomEE_7; Check: IsWin64; Flags: runhidden runascurrentuser
Filename: "net"; Parameters: start Apache24; Check: IsWin64; Flags: runhidden runascurrentuser
Filename: "{app}\bin\nssm.exe"; Parameters: start adInterfaceService; Check: IsWin64; Flags: runhidden runascurrentuser
; ショートカットのリンク先を変更する
Filename: "{sys}\wscript.exe"; Parameters: "{app}\bin\replace_shortcut.vbs"; Check: IsWin64; Flags: runhidden runascurrentuser

[InstallDelete]
; ユーザーのデスクトップからショートカットを削除
Type: files; Name: "{userdesktop}\{cm:adAgendaMonitor}.lnk"

[UninstallDelete]

[UninstallRun]

[Code]
#ifdef UNICODE
  #define AW "W"
#else
  #define AW "A"
#endif

const RegKeyJRE = 'SOFTWARE\JavaSoft\Java Runtime Environment\';

function SetEnvironmentVariable(lpName: string; lpValue: string): BOOL;
  external 'SetEnvironmentVariable{#AW}@kernel32.dll stdcall';

//************************* Global Variables *************************
var IsRestart: Boolean;
var IsUpdate: Boolean;

procedure unzip(src, target: AnsiString);
  external 'unzip@files:unzipper.dll stdcall delayload';

// フォルダがが存在しない場合、Trueを返す
function isDbDirExist(path: string): Boolean;
begin
  Result := True;
  if DirExists(ExpandConstant(path)) then
  begin
    Result := False;
  end;
end;

// 64bitのJavaがインストールされていない場合、Trueを返す
function isInstalledJava64(MinVersion: string): Boolean;
var
  Index: Integer;
  Path: string;
  Versions: TArrayOfString;
  StringArray: TArrayOfString;
begin
  Result := False;
  if RegGetSubkeyNames(HKLM64, RegKeyJRE, Versions) then
    for Index := 0 to GetArrayLength(Versions)-1 do
      if (Versions[Index][2] = '.') and (Versions[Index][3] >= MinVersion) and
        RegQueryStringValue(HKLM64, RegKeyJRE + Versions[Index], 'JavaHome', Path) then
      begin
        Result := True;
        Exit;
      end;
end;

// 32bitのJavaがインストールされていない場合、Trueを返す
function isInstalledJava32(MinVersion: string): Boolean;
var
  Index: Integer;
  Path: string;
  Versions: TArrayOfString;
  StringArray: TArrayOfString;
begin
  Result := False;
  if RegGetSubkeyNames(HKLM32, RegKeyJRE, Versions) then
    for Index := 0 to GetArrayLength(Versions)-1 do
      if (Versions[Index][2] = '.') and (Versions[Index][3] >= MinVersion) and
        RegQueryStringValue(HKLM32, RegKeyJRE + Versions[Index], 'JavaHome', Path) then
      begin
        Result := True;
        Exit;
      end;
end;

// JAVA_HOMEを設定する。
procedure SetJdkPath(path: String);
begin
  if not SetEnvironmentVariable('JAVA_HOME', path) then
    MsgBox(SysErrorMessage(DLLGetLastError), mbError, MB_OK);
  Log('[info]JRE_HOME:' + path)
end;

// OpenJDKのパッケージを解凍する。
procedure unzipOpenJDK();
begin
  Log('[info]unzipOpenJDK')
  unzip(AnsiString(ExpandConstant('{tmp}\{#OpenJDKZip}')), AnsiString(ExpandConstant('{app}\3rd')));
end;

// Javaをインストールする
procedure installJava();
var
  ResultCode: Integer;
begin
  //msgbox('Installation to ' + ExpandConstant('{pf64}\{#JavaPath}'), mbConfirmation, MB_OK);
  Log('[info]installJava')
  // JAVAをインストールする。
  unzipOpenJDK();

  SetJdkPath(ExpandConstant('{app}\3rd\{#OpenJDKPath}'));
end;

// 関連サービスを停止する
procedure stopService();
var
  ResultCode: Integer;
begin
  if IsWin64 then
  begin
    Exec(ExpandConstant('{cmd}'), '/c net stop Apache24', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
    Exec(ExpandConstant('{cmd}'), '/c net stop TomEE_8', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
    Exec(ExpandConstant('{app}\bin\nssm.exe'), 'stop adInterfaceService', ExpandConstant('{app}\bin'), SW_HIDE, ewWaitUntilTerminated, ResultCode);
  end;
end;

// 文字列を展開する
procedure Split(var Dest: TArrayOfString; Text: String; Separator: String);
var
  i, p: Integer;
begin
  i := 0;
  repeat
    SetArrayLength(Dest, i+1);
    p := Pos(Separator,Text);
    if p > 0 then begin
      Dest[i] := Copy(Text, 1, p-1);
      Text := Copy(Text, p + Length(Separator), Length(Text));
      i := i + 1;
    end else begin
      Dest[i] := Text;
      Text := '';
    end;
  until Length(Text)=0;
end;

// インストーラーを初期化
function InitializeSetup(): Boolean;
begin
  IsRestart := False;

  if not RegValueExists(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment', 'ADFACTORY_HOME')
  then begin
    IsRestart := True;
  end;

  Result := True;
end;

// 各ダイアログで「次へ」ボタンが押された
function NextButtonClick(CurPageID: Integer): Boolean;
begin
  Result := True;
  case CurPageID of
    wpReady:
      begin
        if ((DirExists(ExpandConstant('C:\adFactory\3rd\{#OpenJDKPath}')) = False) and (FileExists(ExpandConstant('{src}\3rd\{#OpenJDKZip}')) = False)) then
        begin
          MsgBox(ExpandConstant('{src}\3rd\{#OpenJDKZip}') + CustomMessage('notExistFile'), mbError, MB_OK);
          Result := False;
        end;
      end;
  end;
end;

// 再起動が必要かどうか
function NeedRestart(): Boolean;
begin
  Result := IsRestart;
end;

// プロパティファイルの値を更新する
procedure UpdatePropValue(PropFile: String; PropKey: string; PropValue: string);
var
  FileLines: TStringList;
  Index: Integer;
  StringArray: TArrayOfString;
  IsNotExist: Boolean;
begin
  FileLines := TStringList.Create;
  try
    FileLines.LoadFromFile(PropFile);
    // 該当キーの行を検索して更新する
    IsNotExist := True;
    for Index := 0 to FileLines.Count - 1 do
    begin
      Split(StringArray, FileLines[Index], '=');
      if (StringArray[0] = PropKey) then
      begin
        FileLines[Index] := PropKey + '=' + PropValue;
        IsNotExist := False;
      end;
    end;
    // 該当キーの行が無かった場合は追加する
    if (IsNotExist) then
    begin
      FileLines.Add(PropKey + '=' + PropValue)
    end;
    // ファイルを更新する
    FileLines.SaveToFile(PropFile);
  finally
    FileLines.Free;
  end
end;

// インストール前後タスク
procedure CurStepChanged(CurStep: TSetupStep);
var
  ResultCode: Integer;
begin
  case CurStep of
    ssInstall:// インストール開始前
      begin
        IsUpdate := FileExists(ExpandConstant('{app}\bin\adAgendaMonitor.exe'));
      end;
    ssPostInstall:// インストール終了後
      begin
        //UpdatePropValue(ExpandConstant('{app}\conf\adAndonApp.properties'), 'autoUpdate', 'true');
      end;
    ssDone:// セットアッププログラム終了前
      begin
        // 新規インストールの場合、adSetupToolを起動する
        if not IsUpdate then
        begin
          Exec(ExpandConstant('{app}\bin\adSetupTool.exe'), '', '', SW_SHOW, ewWaitUntilTerminated, ResultCode);
        end;
      end;
  end;
end;
